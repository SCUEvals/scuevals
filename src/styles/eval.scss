@import 'theme';
//breakpoints for scores
$xlBP: 5;
$lgBP: 5;
$mdBP: 5;
$smBP: 3;
$xsBP: 2;

$voteWidth: 50px;

.eval {
  position: relative;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0.25rem;

  &:not(:last-of-type) {
    margin-bottom: 30px;
  }

  .vote {
    float: left;
    width: $voteWidth;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: absolute;
    height: 100%;
    background: $SCUred;
    border-radius: $defaultBorderRadius 0 0 $defaultBorderRadius;

    i {
      @include alternateLink;

      font-size: 28px;
      cursor: pointer;

      &.active {
        color: $focusColor;

        &:hover {
          color: $focusColor;
        }
      }

      &:focus {
        text-shadow: -2px 0 $overlayBackground, 0 2px $overlayBackground, 2px 0 $overlayBackground, 0 -2px $overlayBackground;
      }

      &:global(.fa-caret-up) {
        margin-bottom: 3px; //icon needs to be centered, this fixes it
      }
    }

    .voteScore {
      color: white;
      width: 100%;
      height: 30px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }

  .evalContent {
    margin-left: $voteWidth;
    width: calc(100% - #{$voteWidth});
  }

  :global(.slick-dots) {
    background: $sandColor;
    border-bottom: 1px solid $backgroundColor;
    margin: 0;
    position: static;
    padding: 5px 0;
    display: flex !important;
    justify-content: center;
    align-items: center;

    li {
      display: inline-block;
      padding: 0 3px;

      button {
        display: block;
        width: 15px;
        height: 15px;
        cursor: pointer;
        padding: 0;
        border-radius: 50%;
        color: transparent;
        font-size: 0;
        background: white;
        border: 2px solid $backgroundColor;

        &:hover {
          background: $SCUdarkred;
        }
      }

      &:global(.slick-active) button {
        background: $SCUred;
      }
    }
  }

  .scoreBlock,
  :global(.slick-track) {
    height: 100%;
    vertical-align: middle;
  }

  .scoreBlock {
    min-width: 100px;

    &:not(:first-of-type) {
      border-left: 1px solid $backgroundColor;
    }
  }

  :global(.slick-list) {
    height: 74px;
    padding: 5px 0;
    background: $sandColor;
    border-bottom: 1px solid $backgroundColor;
    cursor: grab;

    &:active {
      cursor: grabbing;
    }
  }

  :global(.slider.regular:not(.slick-initialized)) {
    padding: 5px 0;
    border-bottom: 1px solid $backgroundColor;
    background: $sandColor;
    height: 74px;
  }

  .scoreBlock:not(.totalScore) {
    .scoreWrapper {
      height: 50%;
      display: flex;
      align-items: center;
      position: relative;
      max-width: 205px;
      margin: auto;

      .scoreTitle {
        margin-left: 10px;
        font-size: 14px;
      }

      /* SCU computers use Firefox v52.7.0 ESR as of 08 Mar 18, which has a bug with positioning.
         Interacting with browser (resizing, disabling and re-enabling CSS features in inspector,
         etc.) fixes this issue, so create animation that mimics this as a fix */
      @keyframes firefox52Fix {
        0% {
          right: 4px;
          opacity: 0;
        }

        99% {
          right: 5px;
          opacity: 0;
        }

        100% {
          opacity: 1;
        }
      }

      :global(svg.score) {
        animation-name: firefox52Fix;
        animation-duration: 0.1s;
        transform: scale(0.66);
        position: absolute;
        right: 5px;
      }
    }
  }

  :global(.slider.regular:not(.slick-initialized)) .scoreBlock {
    display: inline-block;
    width: percentage(1 / $xlBP);
  }

  .scoreBlock.totalScore {
    span {
      display: block;
    }

    .scoreWrapper {
      height: 100%;
    }
  }

  .evalInfo {
    border-left: 1px solid rgba(0, 0, 0, 0.2);
    margin: 0;
    background: $SCUred;
    color: white;
    border-radius: 0 $defaultBorderRadius 0 0;

    > div {
      display: flex;
      justify-content: center;
      align-items: center;
      padding-bottom: 0;
    }

    @media (min-width: $sm) {
      .col-sm-custom {
        max-width: 36.9%;
        flex: 0 0 36.9%; //copying bootstrap column css

        &:first-of-type {
          max-width: 26.2%;
          flex: 0 0 26.2%; //copying bootstrap column css
        }
      }
    }

    a {
      @include alternateLink;

      font-size: 16px;
      display: block;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      padding: 0 15px;
    }
  }

  .comment {
    text-align: initial;

    .commentQuote {
      text-align: center;
      position: relative;
      margin: 15px;

      .truncate {
        overflow: hidden;
        transition: $defaultTransition;
        height: auto;
      }

      .showBtn {
        display: block;
        background: transparent;
        color: $SCUred;
        font-weight: bold;
        padding: 0 5px;
        margin: 0 auto;

        &:hover {
          color: $SCUdarkred;
        }
      }

      hr.fadeBar {
        all: unset;
        transition: none;
        width: 100%;
        position: absolute;
        background: linear-gradient(to bottom, rgba(255, 255, 255, 0), #fff);
        height: 15px;
        left: 0;
        top: 55px;
        //bottom: 30px;
      }
    }

    .posterInfo {
      padding-left: 30px;
      color: $gray;
      font-size: 14px;
      display: flex;
      align-items: center;
    }

    .triggerModal {
      text-align: right;
      padding-right: 30px;
      padding-bottom: 5px;

      i:global(.fa-trash) {
        font-size: 20px;
        cursor: pointer;
      }

      .flagged {
        color: $gray;
      }
    }
  }
}
